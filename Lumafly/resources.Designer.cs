//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lumafly {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lumafly.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , .
        /// </summary>
        internal static string Array_Sep {
            get {
                return ResourceManager.GetString("Array_Sep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Mods.
        /// </summary>
        internal static string AvailableMods {
            get {
                return ResourceManager.GetString("AvailableMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Packs:.
        /// </summary>
        internal static string AvailablePacks {
            get {
                return ResourceManager.GetString("AvailablePacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string Confirm {
            get {
                return ResourceManager.GetString("Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Mod.
        /// </summary>
        internal static string DisableMod {
            get {
                return ResourceManager.GetString("DisableMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Details.
        /// </summary>
        internal static string EditDetails {
            get {
                return ResourceManager.GetString("EditDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Mods.
        /// </summary>
        internal static string EditMods {
            get {
                return ResourceManager.GetString("EditMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Pack.
        /// </summary>
        internal static string EditPack {
            get {
                return ResourceManager.GetString("EditPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Mod.
        /// </summary>
        internal static string EnableMod {
            get {
                return ResourceManager.GetString("EnableMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Sharing Code:.
        /// </summary>
        internal static string EnterSharingCode {
            get {
                return ResourceManager.GetString("EnterSharingCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t use latest modlinks version. Instead use current version.
        /// </summary>
        internal static string FixedVersion_Tooltip {
            get {
                return ResourceManager.GetString("FixedVersion_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load without replacing.
        /// </summary>
        internal static string LoadPackAdditive {
            get {
                return ResourceManager.GetString("LoadPackAdditive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load this pack without replacing mods in current mods folder.
        /// </summary>
        internal static string LoadPackAdditive_Explanation {
            get {
                return ResourceManager.GetString("LoadPackAdditive_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        internal static string MI_InstallText_Installed {
            get {
                return ResourceManager.GetString("MI_InstallText_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string MI_InstallText_NotInstalled {
            get {
                return ResourceManager.GetString("MI_InstallText_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable API.
        /// </summary>
        internal static string MLVM_ApiButtonText_DisableAPI {
            get {
                return ResourceManager.GetString("MLVM_ApiButtonText_DisableAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable API.
        /// </summary>
        internal static string MLVM_ApiButtonText_EnableAPI {
            get {
                return ResourceManager.GetString("MLVM_ApiButtonText_EnableAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle API.
        /// </summary>
        internal static string MLVM_ApiButtonText_ToggleAPI {
            get {
                return ResourceManager.GetString("MLVM_ApiButtonText_ToggleAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download hash for {0} ({1}) didn&apos;t match the given signature ({2}). It is either corrupt or the entry is incorrect..
        /// </summary>
        internal static string MLVM_DisplayHashMismatch_Msgbox_Text {
            get {
                return ResourceManager.GetString("MLVM_DisplayHashMismatch_Msgbox_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash mismatch!.
        /// </summary>
        internal static string MLVM_DisplayHashMismatch_Msgbox_Title {
            get {
                return ResourceManager.GetString("MLVM_DisplayHashMismatch_Msgbox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download {0}! The site may be down or you may lack network connectivity..
        /// </summary>
        internal static string MLVM_DisplayNetworkError_Msgbox_Text {
            get {
                return ResourceManager.GetString("MLVM_DisplayNetworkError_Msgbox_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Error.
        /// </summary>
        internal static string MLVM_DisplayNetworkError_Msgbox_Title {
            get {
                return ResourceManager.GetString("MLVM_DisplayNetworkError_Msgbox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hollow Knight is open! This may lead to issues when installing mods. Close Hollow Knight?.
        /// </summary>
        internal static string MLVM_InternalUpdateInstallAsync_Msgbox_W_Text {
            get {
                return ResourceManager.GetString("MLVM_InternalUpdateInstallAsync_Msgbox_W_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning!.
        /// </summary>
        internal static string MLVM_InternalUpdateInstallAsync_Msgbox_W_Title {
            get {
                return ResourceManager.GetString("MLVM_InternalUpdateInstallAsync_Msgbox_W_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the mod dll or zip.
        /// </summary>
        internal static string MLVM_Select_Mod {
            get {
                return ResourceManager.GetString("MLVM_Select_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boss.
        /// </summary>
        internal static string ModLinks_Tags_Boss {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Boss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cosmetic.
        /// </summary>
        internal static string ModLinks_Tags_Cosmetic {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Cosmetic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expansion.
        /// </summary>
        internal static string ModLinks_Tags_Expansion {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Expansion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gameplay.
        /// </summary>
        internal static string ModLinks_Tags_Gameplay {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Gameplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library.
        /// </summary>
        internal static string ModLinks_Tags_Library {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Library", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utility.
        /// </summary>
        internal static string ModLinks_Tags_Utility {
            get {
                return ResourceManager.GetString("ModLinks_Tags_Utility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use latest modlinks version.
        /// </summary>
        internal static string ModlinksVersion_Tooltip {
            get {
                return ResourceManager.GetString("ModlinksVersion_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning! Are you sure you want to do this?.
        /// </summary>
        internal static string MVVM_AreYouSure {
            get {
                return ResourceManager.GetString("MVVM_AreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required for {1} to function properly. Do you want to install them?.
        /// </summary>
        internal static string MVVM_DependenciesNotInstalledWarning_Body {
            get {
                return ResourceManager.GetString("MVVM_DependenciesNotInstalledWarning_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mod has dependencies that are not installed!.
        /// </summary>
        internal static string MVVM_DependenciesNotInstalledWarning_Header {
            get {
                return ResourceManager.GetString("MVVM_DependenciesNotInstalledWarning_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required for {1} to function properly. Do you still want to continue?.
        /// </summary>
        internal static string MVVM_DependentsWarning_Body {
            get {
                return ResourceManager.GetString("MVVM_DependentsWarning_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning! This mod is required for other mods to function!.
        /// </summary>
        internal static string MVVM_DependentsWarning_Header {
            get {
                return ResourceManager.GetString("MVVM_DependentsWarning_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possibly caused by poor or no internet connection. Please check that and try again.
        /// </summary>
        internal static string MVVM_DNSError {
            get {
                return ResourceManager.GetString("MVVM_DNSError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occured while {0} {1}.
        /// </summary>
        internal static string MVVM_ExceptionOccur {
            get {
                return ResourceManager.GetString("MVVM_ExceptionOccur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string MVVM_Install {
            get {
                return ResourceManager.GetString("MVVM_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to launch lumafly in offline mode?.
        /// </summary>
        internal static string MVVM_LaunchOfflineMode {
            get {
                return ResourceManager.GetString("MVVM_LaunchOfflineMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching mods from modlinks....
        /// </summary>
        internal static string MVVM_Loading1 {
            get {
                return ResourceManager.GetString("MVVM_Loading1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for response from github....
        /// </summary>
        internal static string MVVM_Loading2 {
            get {
                return ResourceManager.GetString("MVVM_Loading2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Still waiting....
        /// </summary>
        internal static string MVVM_Loading3 {
            get {
                return ResourceManager.GetString("MVVM_Loading3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying from fallback source....
        /// </summary>
        internal static string MVVM_Loading4 {
            get {
                return ResourceManager.GetString("MVVM_Loading4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for response from jsdelivr....
        /// </summary>
        internal static string MVVM_Loading5 {
            get {
                return ResourceManager.GetString("MVVM_Loading5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading the newest mods that are on modlinks....
        /// </summary>
        internal static string MVVM_LoadingWhatsNew {
            get {
                return ResourceManager.GetString("MVVM_LoadingWhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly was unable to load the newest mods from modlinks..
        /// </summary>
        internal static string MVVM_NotAbleToLoadWhatsNew {
            get {
                return ResourceManager.GetString("MVVM_NotAbleToLoadWhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod was manually installed and is not from official modlinks.
        /// </summary>
        internal static string MVVM_NotInModlinks_Description {
            get {
                return ResourceManager.GetString("MVVM_NotInModlinks_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version not from modlinks.
        /// </summary>
        internal static string MVVM_NotInModlinks_Disclaimer {
            get {
                return ResourceManager.GetString("MVVM_NotInModlinks_Disclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try running lumafly as an administrator, it may fix the issue.
        /// </summary>
        internal static string MVVM_RunAsAdmin {
            get {
                return ResourceManager.GetString("MVVM_RunAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please make sure to close all other apps that could be using the mods folder.
        /// </summary>
        internal static string MVVM_SystemIOException_GeneralFileLock {
            get {
                return ResourceManager.GetString("MVVM_SystemIOException_GeneralFileLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly was unable to access the file in the mods folder.
        /// </summary>
        internal static string MVVM_SystemIOException_GeneralReason {
            get {
                return ResourceManager.GetString("MVVM_SystemIOException_GeneralReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please close the following processes as they are locking important files:.
        /// </summary>
        internal static string MVVM_SystemIOException_LockingProcessesList {
            get {
                return ResourceManager.GetString("MVVM_SystemIOException_LockingProcessesList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly cannot access the file:.
        /// </summary>
        internal static string MVVM_SystemIOException_LumaflyCantAccessFile {
            get {
                return ResourceManager.GetString("MVVM_SystemIOException_LumaflyCantAccessFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please make sure that the mods folder is not in a write protected location.
        /// </summary>
        internal static string MVVM_SystemIOException_ProtectedLocation {
            get {
                return ResourceManager.GetString("MVVM_SystemIOException_ProtectedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get modlinks.
        /// </summary>
        internal static string MVVM_UnableToGetModlinks {
            get {
                return ResourceManager.GetString("MVVM_UnableToGetModlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Hollow Knight install at {0}. Is this correct?.
        /// </summary>
        internal static string MWVM_DetectedPath_Message {
            get {
                return ResourceManager.GetString("MWVM_DetectedPath_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected path!.
        /// </summary>
        internal static string MWVM_DetectedPath_Title {
            get {
                return ResourceManager.GetString("MWVM_DetectedPath_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed with HTTP error {0}.
        /// </summary>
        internal static string MWVM_Impl_Error_Fetch_ModLinks_Error {
            get {
                return ResourceManager.GetString("MWVM_Impl_Error_Fetch_ModLinks_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get list of mods from modlinks, the operation {0}.
        /// </summary>
        internal static string MWVM_Impl_Error_Fetch_ModLinks_Msgbox_Text {
            get {
                return ResourceManager.GetString("MWVM_Impl_Error_Fetch_ModLinks_Msgbox_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error!.
        /// </summary>
        internal static string MWVM_Impl_Error_Fetch_ModLinks_Msgbox_Title {
            get {
                return ResourceManager.GetString("MWVM_Impl_Error_Fetch_ModLinks_Msgbox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to timed out. Please check your internet connection and try again.
        /// </summary>
        internal static string MWVM_Impl_Error_Fetch_ModLinks_Timeout {
            get {
                return ResourceManager.GetString("MWVM_Impl_Error_Fetch_ModLinks_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string MWVM_Info {
            get {
                return ResourceManager.GetString("MWVM_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The saved Hollow Knight path is invalid, please re-select a valid path..
        /// </summary>
        internal static string MWVM_InvalidSavedPath_Message {
            get {
                return ResourceManager.GetString("MWVM_InvalidSavedPath_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue anyways..
        /// </summary>
        internal static string MWVM_OutOfDate_ContinueAnyways {
            get {
                return ResourceManager.GetString("MWVM_OutOfDate_ContinueAnyways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the latest release.
        /// </summary>
        internal static string MWVM_OutOfDate_GetLatest {
            get {
                return ResourceManager.GetString("MWVM_OutOfDate_GetLatest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly has a new update available. Please download the newest update (v{0}) to get the latest bug fixes and features..
        /// </summary>
        internal static string MWVM_OutOfDate_Message {
            get {
                return ResourceManager.GetString("MWVM_OutOfDate_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out of date!.
        /// </summary>
        internal static string MWVM_OutOfDate_Title {
            get {
                return ResourceManager.GetString("MWVM_OutOfDate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to detect your Hollow Knight installation. Please select it..
        /// </summary>
        internal static string MWVM_UnableToDetect_Message {
            get {
                return ResourceManager.GetString("MWVM_UnableToDetect_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly failed to download update automatically. Lumafly will now open the link to get the latest version.
        /// </summary>
        internal static string MWVM_UpdateDownloadError_Message {
            get {
                return ResourceManager.GetString("MWVM_UpdateDownloadError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string MWVM_Warning {
            get {
                return ResourceManager.GetString("MWVM_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack Description.
        /// </summary>
        internal static string PackDescription {
            get {
                return ResourceManager.GetString("PackDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack Details.
        /// </summary>
        internal static string PackDetails {
            get {
                return ResourceManager.GetString("PackDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit the details of your pack here..
        /// </summary>
        internal static string PackDetails_Explanation {
            get {
                return ResourceManager.GetString("PackDetails_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack Name.
        /// </summary>
        internal static string PackName {
            get {
                return ResourceManager.GetString("PackName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some mods in the pack are outdated, do you want to update them?.
        /// </summary>
        internal static string PackUpdatePrompt {
            get {
                return ResourceManager.GetString("PackUpdatePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Managed folder or Assembly-CSharp!.
        /// </summary>
        internal static string PU_InvalidApp {
            get {
                return ResourceManager.GetString("PU_InvalidApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Hollow Knight app!.
        /// </summary>
        internal static string PU_InvalidAppHeader {
            get {
                return ResourceManager.GetString("PU_InvalidAppHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Hollow Knight exe! Please select the hollow knight exe or its shortcut.
        /// </summary>
        internal static string PU_InvalidExeHeader {
            get {
                return ResourceManager.GetString("PU_InvalidExeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the folder containing hollow_knight_Data or Hollow Knight_Data..
        /// </summary>
        internal static string PU_InvalidPath {
            get {
                return ResourceManager.GetString("PU_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Hollow Knight path!.
        /// </summary>
        internal static string PU_InvalidPathHeader {
            get {
                return ResourceManager.GetString("PU_InvalidPathHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string PU_InvalidPathTitle {
            get {
                return ResourceManager.GetString("PU_InvalidPathTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No path was selected!.
        /// </summary>
        internal static string PU_NoSelect {
            get {
                return ResourceManager.GetString("PU_NoSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No application was selected!.
        /// </summary>
        internal static string PU_NoSelectMac {
            get {
                return ResourceManager.GetString("PU_NoSelectMac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select your Hollow Knight app..
        /// </summary>
        internal static string PU_SelectApp {
            get {
                return ResourceManager.GetString("PU_SelectApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select your Hollow Knight executable or its shortcut..
        /// </summary>
        internal static string PU_SelectEXE {
            get {
                return ResourceManager.GetString("PU_SelectEXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select your Hollow Knight folder..
        /// </summary>
        internal static string PU_SelectPath {
            get {
                return ResourceManager.GetString("PU_SelectPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert to previous mods.
        /// </summary>
        internal static string RevertToPreviousMods {
            get {
                return ResourceManager.GetString("RevertToPreviousMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Mods.
        /// </summary>
        internal static string SelectedMods {
            get {
                return ResourceManager.GetString("SelectedMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Fixed Version.
        /// </summary>
        internal static string UseFixedVersion {
            get {
                return ResourceManager.GetString("UseFixedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Modlinks Version.
        /// </summary>
        internal static string UseModlinksVersion {
            get {
                return ResourceManager.GetString("UseModlinksVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask.
        /// </summary>
        internal static string XAML_Ask {
            get {
                return ResourceManager.GetString("XAML_Ask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask for help.
        /// </summary>
        internal static string XAML_AskForHelp {
            get {
                return ResourceManager.GetString("XAML_AskForHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authors:.
        /// </summary>
        internal static string XAML_Authors {
            get {
                return ResourceManager.GetString("XAML_Authors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically Remove Unused Dependencies.
        /// </summary>
        internal static string XAML_AutoRemoveDeps {
            get {
                return ResourceManager.GetString("XAML_AutoRemoveDeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Uses extra {0} of storage).
        /// </summary>
        internal static string XAML_CacheDownloads_Explanation {
            get {
                return ResourceManager.GetString("XAML_CacheDownloads_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Path.
        /// </summary>
        internal static string XAML_ChangPath {
            get {
                return ResourceManager.GetString("XAML_ChangPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check For Updates.
        /// </summary>
        internal static string XAML_CheckForUpdates {
            get {
                return ResourceManager.GetString("XAML_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select manually.
        /// </summary>
        internal static string XAML_ChooseDependenciesToUninstall {
            get {
                return ResourceManager.GetString("XAML_ChooseDependenciesToUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Error.
        /// </summary>
        internal static string XAML_CopyError {
            get {
                return ResourceManager.GetString("XAML_CopyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new pack.
        /// </summary>
        internal static string XAML_CreateNewPack {
            get {
                return ResourceManager.GetString("XAML_CreateNewPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normally Lumafly loads its list of mods from the official modlinks. If you want to load your own then enter its URI here it accepts https links or files (in the format file://{filepath}). \nEmpty links or invalid links will load official modlinks.
        /// </summary>
        internal static string XAML_CustomModlinksExplanation {
            get {
                return ResourceManager.GetString("XAML_CustomModlinksExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter link to custom modlinks. Needs a reload to take effect.
        /// </summary>
        internal static string XAML_CustomModlinksWatermark {
            get {
                return ResourceManager.GetString("XAML_CustomModlinksWatermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete pack.
        /// </summary>
        internal static string XAML_DeletePack {
            get {
                return ResourceManager.GetString("XAML_DeletePack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies:.
        /// </summary>
        internal static string XAML_Dependencies {
            get {
                return ResourceManager.GetString("XAML_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description:.
        /// </summary>
        internal static string XAML_Description {
            get {
                return ResourceManager.GetString("XAML_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All.
        /// </summary>
        internal static string XAML_Disable_All_Installed {
            get {
                return ResourceManager.GetString("XAML_Disable_All_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate.
        /// </summary>
        internal static string XAML_Donate {
            get {
                return ResourceManager.GetString("XAML_Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit pack.
        /// </summary>
        internal static string XAML_EditPack {
            get {
                return ResourceManager.GetString("XAML_EditPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit mod&apos;s settings file.
        /// </summary>
        internal static string XAML_EditSettings {
            get {
                return ResourceManager.GetString("XAML_EditSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable All.
        /// </summary>
        internal static string XAML_Enable_All_Installed {
            get {
                return ResourceManager.GetString("XAML_Enable_All_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exact Search.
        /// </summary>
        internal static string XAML_Exact_Search {
            get {
                return ResourceManager.GetString("XAML_Exact_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter Mods:  .
        /// </summary>
        internal static string XAML_FilterMods {
            get {
                return ResourceManager.GetString("XAML_FilterMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Path.
        /// </summary>
        internal static string XAML_GamePath {
            get {
                return ResourceManager.GetString("XAML_GamePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate a 8 digit sharing code. This can be given to someone else and they can use this pack.
        /// </summary>
        internal static string XAML_GenerateSharingCode {
            get {
                return ResourceManager.GetString("XAML_GenerateSharingCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import pack.
        /// </summary>
        internal static string XAML_ImportPack {
            get {
                return ResourceManager.GetString("XAML_ImportPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string XAML_Info {
            get {
                return ResourceManager.GetString("XAML_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly is an installer for Hollow Knight version 1.5. It will not work for older versions of Hollow Knight..
        /// </summary>
        internal static string XAML_InfoBody {
            get {
                return ResourceManager.GetString("XAML_InfoBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lumafly.
        /// </summary>
        internal static string XAML_InfoHeader {
            get {
                return ResourceManager.GetString("XAML_InfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord\n.
        /// </summary>
        internal static string XAML_InfoLinkDiscord {
            get {
                return ResourceManager.GetString("XAML_InfoLinkDiscord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Github\n.
        /// </summary>
        internal static string XAML_InfoLinkGithub {
            get {
                return ResourceManager.GetString("XAML_InfoLinkGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HK Mod\nManager.
        /// </summary>
        internal static string XAML_InfoLinkHKMM {
            get {
                return ResourceManager.GetString("XAML_InfoLinkHKMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Alternate Installer.
        /// </summary>
        internal static string XAML_InfoLinkHKMMToolTip {
            get {
                return ResourceManager.GetString("XAML_InfoLinkHKMMToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Mods\n.
        /// </summary>
        internal static string XAML_InfoLinkModdingDocs {
            get {
                return ResourceManager.GetString("XAML_InfoLinkModdingDocs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readme\n.
        /// </summary>
        internal static string XAML_InfoLinkReadme {
            get {
                return ResourceManager.GetString("XAML_InfoLinkReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relevant Links.
        /// </summary>
        internal static string XAML_InfoLinksHeader {
            get {
                return ResourceManager.GetString("XAML_InfoLinksHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modding\nTutorial.
        /// </summary>
        internal static string XAML_InfoLinkTutorial {
            get {
                return ResourceManager.GetString("XAML_InfoLinkTutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website\n.
        /// </summary>
        internal static string XAML_InfoLinkWebsite {
            get {
                return ResourceManager.GetString("XAML_InfoLinkWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrations:.
        /// </summary>
        internal static string XAML_Integrations {
            get {
                return ResourceManager.GetString("XAML_Integrations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string XAML_Language {
            get {
                return ResourceManager.GetString("XAML_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Month.
        /// </summary>
        internal static string XAML_LastMonth {
            get {
                return ResourceManager.GetString("XAML_LastMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Week.
        /// </summary>
        internal static string XAML_LastWeek {
            get {
                return ResourceManager.GetString("XAML_LastWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Modded Game.
        /// </summary>
        internal static string XAML_LaunchModded {
            get {
                return ResourceManager.GetString("XAML_LaunchModded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Vanilla Game.
        /// </summary>
        internal static string XAML_LaunchVanilla {
            get {
                return ResourceManager.GetString("XAML_LaunchVanilla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Pack.
        /// </summary>
        internal static string XAML_LoadPack {
            get {
                return ResourceManager.GetString("XAML_LoadPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Storage Mode.
        /// </summary>
        internal static string XAML_Low_Storage_Mode {
            get {
                return ResourceManager.GetString("XAML_Low_Storage_Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manually Install.
        /// </summary>
        internal static string XAML_Manual_Install {
            get {
                return ResourceManager.GetString("XAML_Manual_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: they may be used by any mods you have installed manually.
        /// </summary>
        internal static string XAML_ManuallyInstalledModesNote {
            get {
                return ResourceManager.GetString("XAML_ManuallyInstalledModesNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        internal static string XAML_Mods {
            get {
                return ResourceManager.GetString("XAML_Mods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string XAML_ModsFilter_All {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string XAML_ModsFilter_Enabled {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        internal static string XAML_ModsFilter_Installed {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out of date.
        /// </summary>
        internal static string XAML_ModsFilter_OutOfDate {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_OutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update All.
        /// </summary>
        internal static string XAML_ModsFilter_OutOfDate_Update {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_OutOfDate_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whats New.
        /// </summary>
        internal static string XAML_ModsFilter_WhatsNew {
            get {
                return ResourceManager.GetString("XAML_ModsFilter_WhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods In Pack:.
        /// </summary>
        internal static string XAML_ModsInPack {
            get {
                return ResourceManager.GetString("XAML_ModsInPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Mods.
        /// </summary>
        internal static string XAML_NewMods {
            get {
                return ResourceManager.GetString("XAML_NewMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mods to display.
        /// </summary>
        internal static string XAML_No_Items {
            get {
                return ResourceManager.GetString("XAML_No_Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string XAML_None {
            get {
                return ResourceManager.GetString("XAML_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal Search.
        /// </summary>
        internal static string XAML_Normal_Search {
            get {
                return ResourceManager.GetString("XAML_Normal_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off.
        /// </summary>
        internal static string XAML_Off {
            get {
                return ResourceManager.GetString("XAML_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        internal static string XAML_Ok {
            get {
                return ResourceManager.GetString("XAML_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On.
        /// </summary>
        internal static string XAML_On {
            get {
                return ResourceManager.GetString("XAML_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk Actions.
        /// </summary>
        internal static string XAML_Open_Bulk_Action {
            get {
                return ResourceManager.GetString("XAML_Open_Bulk_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open folder where this mod is installed.
        /// </summary>
        internal static string XAML_OpenFolder {
            get {
                return ResourceManager.GetString("XAML_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait launching game....
        /// </summary>
        internal static string XAML_OpeningGame {
            get {
                return ResourceManager.GetString("XAML_OpeningGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Logs Folder.
        /// </summary>
        internal static string XAML_OpenLogsFolder {
            get {
                return ResourceManager.GetString("XAML_OpenLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Mods Folder.
        /// </summary>
        internal static string XAML_OpenMods {
            get {
                return ResourceManager.GetString("XAML_OpenMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Folder.
        /// </summary>
        internal static string XAML_OpenModsOrSaves {
            get {
                return ResourceManager.GetString("XAML_OpenModsOrSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packs.
        /// </summary>
        internal static string XAML_Packs {
            get {
                return ResourceManager.GetString("XAML_Packs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin.
        /// </summary>
        internal static string XAML_Pin {
            get {
                return ResourceManager.GetString("XAML_Pin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin a mod so it isn&apos;t automatically replaced by Lumafly.
        /// </summary>
        internal static string XAML_PinMod_Explanation {
            get {
                return ResourceManager.GetString("XAML_PinMod_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record as custom version.
        /// </summary>
        internal static string XAML_RegisterNotInModlinks {
            get {
                return ResourceManager.GetString("XAML_RegisterNotInModlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record this mod&apos;s version as not from modlinks. Doesn&apos;t affect the mod in any way only affects how lumafly handles it. A pinned custom version mod will never be replaced by lumafly.
        /// </summary>
        internal static string XAML_RegisterNotInModlinks_Explanation {
            get {
                return ResourceManager.GetString("XAML_RegisterNotInModlinks_Explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reload Lumafly.
        /// </summary>
        internal static string XAML_ReloadLumafly {
            get {
                return ResourceManager.GetString("XAML_ReloadLumafly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Reload for changes to take effect).
        /// </summary>
        internal static string XAML_ReloadPrompt {
            get {
                return ResourceManager.GetString("XAML_ReloadPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report a bug or an issue with this mod.
        /// </summary>
        internal static string XAML_ReportBug {
            get {
                return ResourceManager.GetString("XAML_ReportBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Error.
        /// </summary>
        internal static string XAML_ReportError {
            get {
                return ResourceManager.GetString("XAML_ReportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository.
        /// </summary>
        internal static string XAML_Repository {
            get {
                return ResourceManager.GetString("XAML_Repository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Mod: force re-installs the mod and removes its persistent settings.
        /// </summary>
        internal static string XAML_ResetMod {
            get {
                return ResourceManager.GetString("XAML_ResetMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Saves Folder.
        /// </summary>
        internal static string XAML_SavesFolder {
            get {
                return ResourceManager.GetString("XAML_SavesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search by Dependencies and Integrations.
        /// </summary>
        internal static string XAML_Search_Dependents {
            get {
                return ResourceManager.GetString("XAML_Search_Dependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search by Integrations.
        /// </summary>
        internal static string XAML_Search_Integrations {
            get {
                return ResourceManager.GetString("XAML_Search_Integrations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Search.
        /// </summary>
        internal static string XAML_Search_Options {
            get {
                return ResourceManager.GetString("XAML_Search_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Type.
        /// </summary>
        internal static string XAML_Search_Type {
            get {
                return ResourceManager.GetString("XAML_Search_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Author.
        /// </summary>
        internal static string XAML_SearchAuthor {
            get {
                return ResourceManager.GetString("XAML_SearchAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Search.
        /// </summary>
        internal static string XAML_SearchMark {
            get {
                return ResourceManager.GetString("XAML_SearchMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Authors.
        /// </summary>
        internal static string XAML_Select_Authors {
            get {
                return ResourceManager.GetString("XAML_Select_Authors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Mod.
        /// </summary>
        internal static string XAML_Select_Mod {
            get {
                return ResourceManager.GetString("XAML_Select_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Tags.
        /// </summary>
        internal static string XAML_Select_Tags {
            get {
                return ResourceManager.GetString("XAML_Select_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string XAML_Settings {
            get {
                return ResourceManager.GetString("XAML_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the shareable download link of this mod..
        /// </summary>
        internal static string XAML_Share {
            get {
                return ResourceManager.GetString("XAML_Share", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Share this pack.
        /// </summary>
        internal static string XAML_SharePack {
            get {
                return ResourceManager.GetString("XAML_SharePack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Share this pack as a zip file. You will need to send this zip file yourself..
        /// </summary>
        internal static string XAML_SharePackManually {
            get {
                return ResourceManager.GetString("XAML_SharePackManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sharing Code:.
        /// </summary>
        internal static string XAML_SharingCode {
            get {
                return ResourceManager.GetString("XAML_SharingCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to show full error.
        /// </summary>
        internal static string XAML_ShowError {
            get {
                return ResourceManager.GetString("XAML_ShowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags:.
        /// </summary>
        internal static string XAML_Tags {
            get {
                return ResourceManager.GetString("XAML_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle All.
        /// </summary>
        internal static string XAML_Toggle_All {
            get {
                return ResourceManager.GetString("XAML_Toggle_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable all mods if any are enabled, Enable all mods if all are disabled.
        /// </summary>
        internal static string XAML_Toggle_All_Tooltip {
            get {
                return ResourceManager.GetString("XAML_Toggle_All_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall All.
        /// </summary>
        internal static string XAML_Uninstall_All {
            get {
                return ResourceManager.GetString("XAML_Uninstall_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling this mod will leave dependencies that appear to be unused now.
        /// </summary>
        internal static string XAML_UninstallDependencies {
            get {
                return ResourceManager.GetString("XAML_UninstallDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto remove dependencies?.
        /// </summary>
        internal static string XAML_UninstallDependencies_Title {
            get {
                return ResourceManager.GetString("XAML_UninstallDependencies_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpin.
        /// </summary>
        internal static string XAML_Unpin {
            get {
                return ResourceManager.GetString("XAML_Unpin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        internal static string XAML_Update {
            get {
                return ResourceManager.GetString("XAML_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update API.
        /// </summary>
        internal static string XAML_UpdateAPI {
            get {
                return ResourceManager.GetString("XAML_UpdateAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated Mods.
        /// </summary>
        internal static string XAML_UpdatedMods {
            get {
                return ResourceManager.GetString("XAML_UpdatedMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Custom Modlinks.
        /// </summary>
        internal static string XAML_UseCustomModlinks {
            get {
                return ResourceManager.GetString("XAML_UseCustomModlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        internal static string XAML_Version {
            get {
                return ResourceManager.GetString("XAML_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warn before removing a dependent mod.
        /// </summary>
        internal static string XAML_WarnBeforeRemovingDependentMods {
            get {
                return ResourceManager.GetString("XAML_WarnBeforeRemovingDependentMods", resourceCulture);
            }
        }
    }
}
